openapi: 3.0.3
info:
  title: Company Internal Social Network API
  description: API for the internal social network of the company
  version: 1.0.0

servers:
  - url: http://localhost:8080/api
    description: Local server

paths:
  /users:
    get:
      summary: Get all users
      responses:
        '200':
          description: A JSON array of user objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/{id}:
    get:
      summary: Get a user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A single user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Update a user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: Delete a user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: User deleted successfully

  /posts:
    get:
      summary: Get all posts
      responses:
        '200':
          description: A JSON array of post objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
    post:
      summary: Create a new post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '201':
          description: Post created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'

  /posts/{id}:
    get:
      summary: Get a post by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A single post object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
    put:
      summary: Update a post by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '200':
          description: Post updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
    delete:
      summary: Delete a post by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Post deleted successfully

  /chats:
    get:
      summary: Get all chats
      responses:
        '200':
          description: A JSON array of chat objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Chat'
    post:
      summary: Create a new chat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Chat'
      responses:
        '201':
          description: Chat created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'

  /chats/{id}:
    get:
      summary: Get a chat by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A single chat object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
    put:
      summary: Update a chat by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Chat'
      responses:
        '200':
          description: Chat updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
    delete:
      summary: Delete a chat by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Chat deleted successfully

  /messages:
    get:
      summary: Get all messages
      responses:
        '200':
          description: A JSON array of message objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
    post:
      summary: Create a new message
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        '201':
          description: Message created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'

  /messages/{id}:
    get:
      summary: Get a message by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A single message object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    put:
      summary: Update a message by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        '200':
          description: Message updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    delete:
      summary: Delete a message by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Message deleted successfully

  /workspaces:
    get:
      summary: Get all workspaces
      responses:
        '200':
          description: A JSON array of workspace objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Workspace'
    post:
      summary: Create a new workspace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workspace'
      responses:
        '201':
          description: Workspace created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'

  /workspaces/{id}:
    get:
      summary: Get a workspace by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A single workspace object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
    put:
      summary: Update a workspace by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workspace'
      responses:
        '200':
          description: Workspace updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
    delete:
      summary: Delete a workspace by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Workspace deleted successfully

  /bookings:
    get:
      summary: Get all bookings
      responses:
        '200':
          description: A JSON array of booking objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Booking'
    post:
      summary: Create a new booking
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'
      responses:
        '201':
          description: Booking created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'

  /bookings/{id}:
    get:
      summary: Get a booking by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A single booking object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
    put:
      summary: Update a booking by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'
      responses:
        '200':
          description: Booking updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
    delete:
      summary: Delete a booking by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Booking deleted successfully

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        login:
          type: string
        password:
          type: string
        role:
          type: string
        lastName:
          type: string
        firstName:
          type: string
        patronymic:
          type: string
        appointment:
          type: string
        birthday:
          type: string
          format: date
        avatarPath:
          type: string

    Role:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string

    Post:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdWhen:
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/User'
        title:
          type: string
        text:
          type: string
        imageName:
          type: string

    Comment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        post:
          $ref: '#/components/schemas/Post'
        createdWhen:
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/User'
        textToComm:
          type: string
        answerToComm:
          type: integer
          format: int64
        image:
          type: integer
          format: int64

    Like:
      type: object
      properties:
        id:
          type: integer
          format: int64
        user:
          $ref: '#/components/schemas/User'
        post:
          $ref: '#/components/schemas/Post'

    Repost:
      type: object
      properties:
        id:
          type: integer
          format: int64
        post:
          $ref: '#/components/schemas/Post'
        user:
          $ref: '#/components/schemas/User'
        targetChatId:
          type: integer
          format: int64

    Media:
      type: object
      properties:
        id:
          type: integer
          format: int64
        post:
          $ref: '#/components/schemas/Post'
        mediaType:
          type: string
        fileName:
          type: string
        filePath:
          type: string
        uploadedWhen:
          type: string
          format: date-time

    Chat:
      type: object
      properties:
        id:
          type: integer
          format: int64
        chatType:
          type: string
        chatName:
          type: string
        createdWhen:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/User'

    ChatMember:
      type: object
      properties:
        id:
          type: integer
          format: int64
        chat:
          $ref: '#/components/schemas/Chat'
        user:
          $ref: '#/components/schemas/User'
        joinedWhen:
          type: string
          format: date-time

    Message:
      type: object
      properties:
        id:
          type: integer
          format: int64
        chat:
          $ref: '#/components/schemas/Chat'
        user:
          $ref: '#/components/schemas/User'
        text:
          type: string
        createdWhen:
          type: string
          format: date-time
        status:
          type: string

    MessageFile:
      type: object
      properties:
        id:
          type: integer
          format: int64
        message:
          $ref: '#/components/schemas/Message'
        file:
          $ref: '#/components/schemas/File'

    File:
      type: object
      properties:
        id:
          type: integer
          format: int64
        fileName:
          type: string
        filePath:
          type: string
        fileType:
          type: string
        uploadedWhen:
          type: string
          format: date-time
        uploadedBy:
          $ref: '#/components/schemas/User'

    Workspace:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        location:
          type: string
        description:
          type: string
        isAvailable:
          type: boolean

    Booking:
      type: object
      properties:
        id:
          type: integer
          format: int64
        workspace:
          $ref: '#/components/schemas/Workspace'
        user:
          $ref: '#/components/schemas/User'
        bookingStart:
          type: string
          format: date-time
        bookingEnd:
          type: string
          format: date-time
        createdWhen:
          type: string
          format: date-time

  
